AWSTemplateFormatVersion: '2010-09-09'
Resources:

  MyCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - GitBucket
      - DefaultCachePolicy
    Properties:
      DistributionConfig:
        Enabled: true
        Origins:
          - Id: GitBucket
            DomainName: !GetAtt GitBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: '' # Optionally, you can provide an OAI (Origin Access Identity) for private access
        DefaultCacheBehavior:
          TargetOriginId: GitBucket
          ViewerProtocolPolicy: allow-all
          CachePolicyId: !Ref DefaultCachePolicy
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        PriceClass: PriceClass_100 # Optional, to define the price class for the distribution
        Comment: My CloudFront Distribution with S3 Origin

  GitBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cloudformationbucket84352
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      WebsiteConfiguration:
        IndexDocument: index.html

  DefaultCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: git-cache-policy
        DefaultTTL: 10
        MaxTTL: 10
        MinTTL: 1
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none

  MySecret:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Name: MyGeneratedSecret
      Description: This is an automatically generated secret.
      GenerateSecretString:
        SecretStringTemplate: '{"username":"myUsername"}'  # Template for the secret
        GenerateStringKey: password  # Key for the generated value
        PasswordLength: 16  # Length of the generated password
        ExcludeCharacters: '"@/\\'  # Characters to exclude from the generated password
      Tags:
        - Key: Environment
          Value: Production

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: mydb
      AllocatedStorage: '5'
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref MySecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref MySecret, ':SecretString:password}}' ]]

  MyNewServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ddc798b3f1a5117e 
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: MyNewServer

  

Outputs:
  CloudFrontURL:
    Value: https://drf2mowams5v2.cloudfront.net
    Description: URL of the CloudFront distribution 
