AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Environment:
    Type: String
    Description: The Environment being targetted
    Default: main
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-vpc"
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-public-subnet-01"
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      VpcId: !Ref VPC
      CidrBlock: 10.0.16.0/20
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub "${Environment}-public-subnet-02"
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Environment}-ec2-bastion-sg"
      GroupDescription: Security group for bastion host
      VpcId: !Ref VPC
  BastionAllowInboundSSHFromInternet:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref BastionSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-igw"
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-public-rt"
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetRouteTableAssociationAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0984f4b9e98be44bf
      InstanceType: t2.micro
      KeyName: BastionKP
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref BastionSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-bastion-host"
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-private-subnet-01"
        - Key: AZ
          Value: us-east-1a
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.2.0/24
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-private-subnet-01"
        - Key: AZ
          Value: us-east-1b
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-private-rt-01"
  PrivateSubnetRouteTableAssociationAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-private-rt-02"
  PrivateSubnetRouteTableAssociationAZ2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for DB Cluster
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-private-db-subnet-01"
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: dummy-database-sg
      GroupDescription: Security group for core database
      VpcId: !Ref VPC
  # DbSecurityByEC2SecurityGroup: 
  #   Type: AWS::RDS::DBSecurityGroup
  #   Properties: 
  #     GroupDescription: "Ingress for Amazon EC2 security group"
  #     DBSecurityGroupIngress: 
  #       - 
  #         EC2SecurityGroupId: !Ref BastionSecurityGroup
  DatabaseAllowInboundFromBastion:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DatabaseSecurityGroup
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !GetAtt DatabaseSecurityGroup.GroupId
  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub "${Environment}-app-database"
      DBName: !Sub "${Environment}-app-database"
      Engine: postgres
      MultiAZ: false
      DBInstanceClass: db.t4g.micro
      AllocatedStorage: '20'
      MasterUsername: admin123
      MasterUserPassword: password121
      DBSubnetGroupName: !Ref DBSubnetGroup
      # DBSecurityGroups: !Ref DbSecurityByEC2SecurityGroup
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Sub "${Environment}.benmcquade.link"
Outputs:
  VpcId:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPC"
  PrivateSubnet1:
    Description: The ID of the Private Subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet1"
  PublicSubnet1:
    Description: The ID of the Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet1"
  PublicSubnet2:
    Description: The ID of the Public Subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet2"
  HostedZoneId:
    Description: The ID of the HostedZone
    Value: !Ref HostedZone
    Export:
      Name: !Sub "${AWS::StackName}-HostedZoneId"
  BastionSecurityGroupId:
    Description: The ID of the Bastion Security Group
    Value: !Ref BastionSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-BastionSecurityGroupId"
